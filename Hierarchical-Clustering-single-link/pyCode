import csv
import Queue
import math

data = []
i=0
with open('points.csv', 'rb') as csvfile:
    pointsreader = csv.reader(csvfile, delimiter='	', quotechar='|')
    for row in pointsreader:
        arr = [0,0]
        arr[0] = int(row[0])
        arr[1] = int(row[1])
        #print arr[0], ", ", arr[1]
        data.append(arr)
        i = i+1
        
#sample for loop to iterate through the list
for i in range(len(data)) :
    row = data[i]
    #print row
    #print row[0], ", ", row[1]
for i in range(0,112) :
    row = data[i]
    #print row
    #print row[0], ", ", row[1]

#build up a queue of shortest edges
weightedQueue = []
w = Queue.PriorityQueue(maxsize=0)
for Avertex in range(0,112) :
    for Bvertex in range(Avertex+1, 112) :
        dist = math.sqrt(math.pow(data[Bvertex][0] - data[Avertex][0], 2) + math.pow(data[Bvertex][1] - data[Avertex][1], 2))
        #print data[Bvertex][1], "-", data[Avertex][1], "=", data[Bvertex][1] - data[Avertex][1]
        #print "square(", data[Bvertex][1], "-", data[Avertex][1], ") =", math.pow(data[Bvertex][1] - data[Avertex][1], 2)
        tuple = [dist, Avertex, Bvertex]
        w.put(tuple)
        #w.put(dist, Avertex, Bvertex)
        #print "pair", data[Avertex], "with", data[Bvertex], "dist =", dist

#add segments to the trees and insert back into the queue
for i in range(100000) :
    print w.get()
